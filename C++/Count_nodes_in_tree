#include<iostream>
#include<queue>
using namespace std;
struct node
{
    int data;
    node*left;
    node*right;
    node(int data)
    {
        this->data=data;
        left=NULL;
        right=NULL;
    }
};
node*create()
{
    cout<<"\nEnter data and enter -1 to exit ";
    int data;
    cin>>data;
    node*root=NULL;
    queue<node*> q;
    if(data!=-1)
    {
        root=new node(data);
        q.push(root);
    }
    while(!q.empty())
    {
        node*curr=q.front();
        q.pop();
        cout<<"\nEnter data for left child of "<<curr->data<<" ";
        cin>>data;
        if(data!=-1)
        {
            node*left=new node(data);
            curr->left=left;
            q.push(left);
        }
        cout<<"\nEnter data for right child of "<<curr->data<<" ";
        cin>>data;
        if(data!=-1)
        {
            node*right=new node(data);
            curr->right=right;
            q.push(right);
        }
    }
    return root;
}
int count(node*root)
{
    if(root==NULL)
    {
        return 0;
    }
    int left=count(root->left);
    int right=count(root->right);
    return (1+left+right);
}
int main ()
{
    node*root=create();
    int res=count(root);
    cout<<"\nThe total number of nodes in  tree are "<<res<<endl;
    return 0;
}
